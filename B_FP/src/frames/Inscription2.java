/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;
import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JComboBox;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;


public class Inscription2 extends javax.swing.JFrame {

    public Inscription2() {
        initComponents();
        ShowI();
    }

    Connection Con = null;
    Statement St = null, St1 = null;
    ResultSet Rs = null, Rs1 = null;

    public void Connect_DB() {
        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gst_act", "root", "");
        } catch (SQLException Ex) {
            JOptionPane.showMessageDialog(null, "Impossible de se connecter à la BASE DE DONNÉES.");
        }
    }

    private void ShowI() {
        try {
            Connect_DB();
            St = Con.createStatement();
            Rs = St.executeQuery("SELECT * FROM `inscription`");
            jTable1.setModel(DbUtils.resultSetToTableModel(Rs));

            // Populate nomact JComboBox with data from activité table
            St1 = Con.createStatement();
            Rs1 = St1.executeQuery("SELECT Nom_act FROM activité");
            nomact.removeAllItems();
            while (Rs1.next()) {
                nomact.addItem(Rs1.getString("Nom_act"));
            }

            // Populate numcp JComboBox with data from participant table
            St1 = Con.createStatement();
            Rs1 = St1.executeQuery("SELECT Num_cp FROM participant");
            numcp.removeAllItems();
            while (Rs1.next()) {
                numcp.addItem(Rs1.getString("Num_cp"));
            }
            // Enable suggestions for numcp JComboBox
            AutoCompleteDecorator.decorate(numcp);
            Con.close();
        } catch (SQLException e) {
        }
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        numcp = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nomact = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jadd = new javax.swing.JButton();
        jdelete = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        date = new com.github.lgooddatepicker.components.DatePicker();
        hour = new com.github.lgooddatepicker.components.TimePicker();
        back = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        Edit = new javax.swing.JButton();
        Print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inscription");

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numcp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        numcp.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        numcp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numcpActionPerformed(evt);
            }
        });
        jPanel1.add(numcp, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 160, 30));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Numero de la CP:");
        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 140, 30));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Nom d'activité:");
        jLabel4.setBackground(new java.awt.Color(0, 153, 153));
        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 120, 30));

        nomact.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        nomact.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jPanel1.add(nomact, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 160, 30));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Heure D'activité de participant :");
        jLabel5.setBackground(new java.awt.Color(0, 153, 153));
        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 210, 30));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Date d'activité de participant:");
        jLabel7.setBackground(new java.awt.Color(0, 153, 153));
        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 200, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 550, 390));

        jadd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/plus.png"))); // NOI18N
        jadd.setText("Ajouter");
        jadd.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaddActionPerformed(evt);
            }
        });
        jPanel1.add(jadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 530, 150, 30));

        jdelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        jdelete.setText("Supprimer");
        jdelete.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdeleteActionPerformed(evt);
            }
        });
        jPanel1.add(jdelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 530, 150, 30));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/ins.png"))); // NOI18N
        jLabel9.setText("Inscription");
        jLabel9.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 220, 70));
        jPanel1.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, 160, 30));
        jPanel1.add(hour, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, 90, 30));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        back.setText("Menu");
        back.setBackground(new java.awt.Color(0, 153, 153));
        back.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        back.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, 40));

        jLabel12.setText("La liste des inscriptions aux activités");
        jLabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jLabel12.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 550, 20));

        Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/compose.png"))); // NOI18N
        Edit.setText("Modifier");
        Edit.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        jPanel1.add(Edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 530, 150, 30));

        Print.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/printer.png"))); // NOI18N
        Print.setText("Imprimer");
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });
        jPanel1.add(Print, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 530, 150, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1019, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaddActionPerformed
               DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
 if(numcp.getSelectedItem() == null || nomact.getSelectedItem() == null || hour.getText().isEmpty() || date.getText().isEmpty())
     
                 JOptionPane.showMessageDialog(null, "Veuillez entrer vos informations!");
 else{
    try {
        Connect_DB();
        String insertQuery = "INSERT INTO inscription (id_act, id_prt, heure_act_prt, date_act_prt) VALUES ((SELECT id_act FROM activité WHERE Nom_act = ?), (SELECT id_prt FROM participant WHERE Num_cp = ?), ?, ?)";
        PreparedStatement pst = Con.prepareStatement(insertQuery);
        pst.setString(1, nomact.getSelectedItem().toString());
        pst.setString(2, numcp.getSelectedItem().toString());
        
        LocalTime selectedTime = hour.getTime();
        String formattedTime = selectedTime.format(DateTimeFormatter.ofPattern("HH:mm",Locale.FRANCE));
        pst.setString(3, formattedTime);
        
        pst.setString(4, date.getDate().toString());
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Inscription ajoutée avec succès");
        ShowI();
        numcp.setSelectedIndex(-1);
        nomact.setSelectedIndex(-1);
        hour.setText("");
        date.setText("");
        
        Con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erreur");
    }
 }// TODO add your handling code here:
    }//GEN-LAST:event_jaddActionPerformed
    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
Menu2 menuu = new Menu2();
menuu.setVisible(true);
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
    int index = jTable1.getSelectedRow();
    if (index == -1) {
        JOptionPane.showMessageDialog(this, "Veuillez sélectionner une inscription à modifier.");
    }else {
        try {
            Connect_DB();
            
            
        String updateQuery = "UPDATE inscription SET id_act = (SELECT id_act FROM activité WHERE Nom_act = ?), id_prt = (SELECT id_prt FROM participant WHERE Num_cp = ?), heure_act_prt = ?, date_act_prt = ? WHERE id_ins = ?";
        PreparedStatement pst = Con.prepareStatement(updateQuery);
        
        pst.setString(2, numcp.getSelectedItem().toString());
        pst.setString(1, nomact.getSelectedItem().toString());
        LocalTime selectedTime = hour.getTime();
        String formattedTime = selectedTime.format(DateTimeFormatter.ofPattern("HH:mm",Locale.FRANCE));
        pst.setString(3, formattedTime);
        pst.setString(4, date.getDateStringOrEmptyString());
        pst.setInt(5, Integer.parseInt(jTable1.getValueAt(index, 0).toString()));
        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Inscription modifiée avec succès !");
        ShowI();
        numcp.setSelectedIndex(-1);
        nomact.setSelectedIndex(-1);
        hour.setText("");
        date.setText("");
        Con.close();
    } catch (HeadlessException | NumberFormatException | SQLException e) {
     JOptionPane.showMessageDialog(null, "Erreur");
            }
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_EditActionPerformed

    private void jdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdeleteActionPerformed
        // TODO add your handling code here:
        int index = jTable1.getSelectedRow();
    if (index == -1) {
        JOptionPane.showMessageDialog(this, "Veuillez sélectionner une inscription à supprimer.");
        return;
    }

    int dialogResult = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer cette inscription ?", "Attention", JOptionPane.YES_NO_OPTION);
    if (dialogResult == JOptionPane.YES_OPTION) {
        try {
            Connect_DB();
            String deleteQuery = "DELETE FROM inscription WHERE id_ins = ?";
            PreparedStatement pst = Con.prepareStatement(deleteQuery);
            pst.setInt(1, Integer.parseInt(jTable1.getValueAt(index, 0).toString()));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Inscription supprimée avec succès !");
            ShowI();
                    numcp.setSelectedIndex(-1);
        nomact.setSelectedIndex(-1);
        hour.setText("");
        date.setText("");
            Con.close();
        } catch (HeadlessException | NumberFormatException | SQLException e) {
     JOptionPane.showMessageDialog(null, "Erreur");
        }
    }
    }//GEN-LAST:event_jdeleteActionPerformed

    String Key = null;
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
   DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    int rowIndex = jTable1.getSelectedRow();
    String idAct = model.getValueAt(rowIndex, 4).toString();
    Object idPrtObj = model.getValueAt(rowIndex, 3);
    int idPrt = Integer.parseInt(idPrtObj.toString());

    Key = model.getValueAt(rowIndex, 0).toString();
    hour.setText(model.getValueAt(rowIndex, 1).toString());
    date.setDate(LocalDate.parse(model.getValueAt(rowIndex, 2).toString()));

    try {
        Connect_DB();

        // Set the value of nomact based on idAct
        String nomActQuery = "SELECT Nom_act FROM activité WHERE id_act = ?";
        try (PreparedStatement nomActStmt = Con.prepareStatement(nomActQuery)) {
            nomActStmt.setString(1, idAct);
            ResultSet nomActResult = nomActStmt.executeQuery();
            if (nomActResult.next()) {
                String nomActValue = nomActResult.getString("Nom_act");
                int nomActIndex = getComboBoxItemIndex(nomact, nomActValue);
                nomact.setSelectedIndex(nomActIndex);
            }
        }

        // Set the value of numcp based on idPrt
        String numCpQuery = "SELECT Num_cp FROM participant WHERE id_prt = ?";
        try (PreparedStatement numCpStmt = Con.prepareStatement(numCpQuery)) {
            numCpStmt.setInt(1, idPrt);
            ResultSet numCpResult = numCpStmt.executeQuery();
            if (numCpResult.next()) {
                int numCpValue = numCpResult.getInt("Num_cp");
                int numCpIndex = getComboBoxItemIndex(numcp, String.valueOf(numCpValue));
                numcp.setSelectedIndex(numCpIndex);
            }
        }

        Con.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Erreur");
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void numcpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numcpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numcpActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
        try {
            jTable1.print();
        } catch (PrinterException e) {
        }
    }//GEN-LAST:event_PrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inscription2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inscription2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inscription2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inscription2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inscription2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Edit;
    private javax.swing.JButton Print;
    private javax.swing.JButton back;
    private com.github.lgooddatepicker.components.DatePicker date;
    private com.github.lgooddatepicker.components.TimePicker hour;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jadd;
    private javax.swing.JButton jdelete;
    private javax.swing.JComboBox<String> nomact;
    private javax.swing.JComboBox<String> numcp;
    // End of variables declaration//GEN-END:variables

 private int getComboBoxItemIndex(JComboBox comboBox, String value) {
    for (int i = 0; i < comboBox.getItemCount(); i++) {
        if (comboBox.getItemAt(i).toString().equals(value)) {
            return i;
        }
    }
    return -1;
}
}
